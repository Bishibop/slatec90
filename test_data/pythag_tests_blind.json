{
  "function": "pythag",
  "signature": "REAL FUNCTION PYTHAG(A, B)",
  "description": "Compute sqrt(a^2 + b^2) without overflow",
  "total_tests": 61,
  "test_cases": [
    {
      "description": "Pythagorean triple (3,4,5) scaled by 0.01",
      "inputs": [
        0.03,
        0.04
      ],
      "test_id": 1
    },
    {
      "description": "Pythagorean triple (3,4,5) scaled by 0.1",
      "inputs": [
        0.30000000000000004,
        0.4
      ],
      "test_id": 2
    },
    {
      "description": "Pythagorean triple (3,4,5) scaled by 1",
      "inputs": [
        3,
        4
      ],
      "test_id": 3
    },
    {
      "description": "Pythagorean triple (3,4,5) scaled by 10",
      "inputs": [
        30,
        40
      ],
      "test_id": 4
    },
    {
      "description": "Pythagorean triple (3,4,5) scaled by 100",
      "inputs": [
        300,
        400
      ],
      "test_id": 5
    },
    {
      "description": "Pythagorean triple (3,4,5) scaled by 1000",
      "inputs": [
        3000,
        4000
      ],
      "test_id": 6
    },
    {
      "description": "Pythagorean triple (5,12,13) scaled by 0.01",
      "inputs": [
        0.05,
        0.12
      ],
      "test_id": 7
    },
    {
      "description": "Pythagorean triple (5,12,13) scaled by 0.1",
      "inputs": [
        0.5,
        1.2000000000000002
      ],
      "test_id": 8
    },
    {
      "description": "Pythagorean triple (5,12,13) scaled by 1",
      "inputs": [
        5,
        12
      ],
      "test_id": 9
    },
    {
      "description": "Pythagorean triple (5,12,13) scaled by 10",
      "inputs": [
        50,
        120
      ],
      "test_id": 10
    },
    {
      "description": "Pythagorean triple (5,12,13) scaled by 100",
      "inputs": [
        500,
        1200
      ],
      "test_id": 11
    },
    {
      "description": "Pythagorean triple (5,12,13) scaled by 1000",
      "inputs": [
        5000,
        12000
      ],
      "test_id": 12
    },
    {
      "description": "Pythagorean triple (8,15,17) scaled by 0.01",
      "inputs": [
        0.08,
        0.15
      ],
      "test_id": 13
    },
    {
      "description": "Pythagorean triple (8,15,17) scaled by 0.1",
      "inputs": [
        0.8,
        1.5
      ],
      "test_id": 14
    },
    {
      "description": "Pythagorean triple (8,15,17) scaled by 1",
      "inputs": [
        8,
        15
      ],
      "test_id": 15
    },
    {
      "description": "Pythagorean triple (8,15,17) scaled by 10",
      "inputs": [
        80,
        150
      ],
      "test_id": 16
    },
    {
      "description": "Pythagorean triple (8,15,17) scaled by 100",
      "inputs": [
        800,
        1500
      ],
      "test_id": 17
    },
    {
      "description": "Pythagorean triple (8,15,17) scaled by 1000",
      "inputs": [
        8000,
        15000
      ],
      "test_id": 18
    },
    {
      "description": "Pythagorean triple (7,24,25) scaled by 0.01",
      "inputs": [
        0.07,
        0.24
      ],
      "test_id": 19
    },
    {
      "description": "Pythagorean triple (7,24,25) scaled by 0.1",
      "inputs": [
        0.7000000000000001,
        2.4000000000000004
      ],
      "test_id": 20
    },
    {
      "description": "Pythagorean triple (7,24,25) scaled by 1",
      "inputs": [
        7,
        24
      ],
      "test_id": 21
    },
    {
      "description": "Pythagorean triple (7,24,25) scaled by 10",
      "inputs": [
        70,
        240
      ],
      "test_id": 22
    },
    {
      "description": "Pythagorean triple (7,24,25) scaled by 100",
      "inputs": [
        700,
        2400
      ],
      "test_id": 23
    },
    {
      "description": "Pythagorean triple (7,24,25) scaled by 1000",
      "inputs": [
        7000,
        24000
      ],
      "test_id": 24
    },
    {
      "description": "Edge case: a=0, b=0",
      "inputs": [
        0,
        0
      ],
      "test_id": 25
    },
    {
      "description": "Edge case: a=0, b=1",
      "inputs": [
        0,
        1
      ],
      "test_id": 26
    },
    {
      "description": "Edge case: a=0, b=-1",
      "inputs": [
        0,
        -1
      ],
      "test_id": 27
    },
    {
      "description": "Edge case: a=0, b=1e-10",
      "inputs": [
        0,
        1e-10
      ],
      "test_id": 28
    },
    {
      "description": "Edge case: a=1, b=0",
      "inputs": [
        1,
        0
      ],
      "test_id": 29
    },
    {
      "description": "Edge case: a=1, b=1",
      "inputs": [
        1,
        1
      ],
      "test_id": 30
    },
    {
      "description": "Edge case: a=1, b=-1",
      "inputs": [
        1,
        -1
      ],
      "test_id": 31
    },
    {
      "description": "Edge case: a=1, b=1e-10",
      "inputs": [
        1,
        1e-10
      ],
      "test_id": 32
    },
    {
      "description": "Edge case: a=-1, b=0",
      "inputs": [
        -1,
        0
      ],
      "test_id": 33
    },
    {
      "description": "Edge case: a=-1, b=1",
      "inputs": [
        -1,
        1
      ],
      "test_id": 34
    },
    {
      "description": "Edge case: a=-1, b=-1",
      "inputs": [
        -1,
        -1
      ],
      "test_id": 35
    },
    {
      "description": "Edge case: a=-1, b=1e-10",
      "inputs": [
        -1,
        1e-10
      ],
      "test_id": 36
    },
    {
      "description": "Edge case: a=1e-10, b=0",
      "inputs": [
        1e-10,
        0
      ],
      "test_id": 37
    },
    {
      "description": "Edge case: a=1e-10, b=1",
      "inputs": [
        1e-10,
        1
      ],
      "test_id": 38
    },
    {
      "description": "Edge case: a=1e-10, b=-1",
      "inputs": [
        1e-10,
        -1
      ],
      "test_id": 39
    },
    {
      "description": "Edge case: a=1e-10, b=1e-10",
      "inputs": [
        1e-10,
        1e-10
      ],
      "test_id": 40
    },
    {
      "description": "Powers of 2: both 0.0009765625",
      "inputs": [
        0.0009765625,
        0.0009765625
      ],
      "test_id": 41
    },
    {
      "description": "Powers of 2: both 0.001953125",
      "inputs": [
        0.001953125,
        0.001953125
      ],
      "test_id": 42
    },
    {
      "description": "Powers of 2: both 0.00390625",
      "inputs": [
        0.00390625,
        0.00390625
      ],
      "test_id": 43
    },
    {
      "description": "Powers of 2: both 0.0078125",
      "inputs": [
        0.0078125,
        0.0078125
      ],
      "test_id": 44
    },
    {
      "description": "Powers of 2: both 0.015625",
      "inputs": [
        0.015625,
        0.015625
      ],
      "test_id": 45
    },
    {
      "description": "Powers of 2: both 0.03125",
      "inputs": [
        0.03125,
        0.03125
      ],
      "test_id": 46
    },
    {
      "description": "Powers of 2: both 0.0625",
      "inputs": [
        0.0625,
        0.0625
      ],
      "test_id": 47
    },
    {
      "description": "Powers of 2: both 0.125",
      "inputs": [
        0.125,
        0.125
      ],
      "test_id": 48
    },
    {
      "description": "Powers of 2: both 0.25",
      "inputs": [
        0.25,
        0.25
      ],
      "test_id": 49
    },
    {
      "description": "Powers of 2: both 0.5",
      "inputs": [
        0.5,
        0.5
      ],
      "test_id": 50
    },
    {
      "description": "Powers of 2: both 1",
      "inputs": [
        1,
        1
      ],
      "test_id": 51
    },
    {
      "description": "Powers of 2: both 2",
      "inputs": [
        2,
        2
      ],
      "test_id": 52
    },
    {
      "description": "Powers of 2: both 4",
      "inputs": [
        4,
        4
      ],
      "test_id": 53
    },
    {
      "description": "Powers of 2: both 8",
      "inputs": [
        8,
        8
      ],
      "test_id": 54
    },
    {
      "description": "Powers of 2: both 16",
      "inputs": [
        16,
        16
      ],
      "test_id": 55
    },
    {
      "description": "Powers of 2: both 32",
      "inputs": [
        32,
        32
      ],
      "test_id": 56
    },
    {
      "description": "Powers of 2: both 64",
      "inputs": [
        64,
        64
      ],
      "test_id": 57
    },
    {
      "description": "Powers of 2: both 128",
      "inputs": [
        128,
        128
      ],
      "test_id": 58
    },
    {
      "description": "Powers of 2: both 256",
      "inputs": [
        256,
        256
      ],
      "test_id": 59
    },
    {
      "description": "Powers of 2: both 512",
      "inputs": [
        512,
        512
      ],
      "test_id": 60
    },
    {
      "description": "Powers of 2: both 1024",
      "inputs": [
        1024,
        1024
      ],
      "test_id": 61
    }
  ]
}