{
  "function": "xercnt",
  "signature": "SUBROUTINE XERCNT(LIBRAR, SUBROU, MESSG, NERR, LEVEL, KONTRL)",
  "description": "Allow user control over handling of individual errors",
  "total_tests": 162,
  "test_cases": [
    {
      "description": "Valid KONTRL=-2, library=SLATEC, routine=XERMSG",
      "inputs": [
        "SLATEC",
        "XERMSG",
        "INVALID INPUT",
        1,
        1,
        -2
      ],
      "test_id": 1
    },
    {
      "description": "Valid KONTRL=-2, library=LINPACK, routine=XERROR",
      "inputs": [
        "LINPACK",
        "XERROR",
        "DIVISION BY ZERO",
        2,
        1,
        -2
      ],
      "test_id": 2
    },
    {
      "description": "Valid KONTRL=-2, library=EISPACK, routine=XERCLR",
      "inputs": [
        "EISPACK",
        "XERCLR",
        "OVERFLOW DETECTED",
        3,
        1,
        -2
      ],
      "test_id": 3
    },
    {
      "description": "Valid KONTRL=-2, library=BLAS, routine=XSETF",
      "inputs": [
        "BLAS",
        "XSETF",
        "UNDERFLOW WARNING",
        4,
        1,
        -2
      ],
      "test_id": 4
    },
    {
      "description": "Valid KONTRL=-2, library=LAPACK, routine=XGETF",
      "inputs": [
        "LAPACK",
        "XGETF",
        "CONVERGENCE FAIL",
        5,
        1,
        -2
      ],
      "test_id": 5
    },
    {
      "description": "Valid KONTRL=-1, library=SLATEC, routine=XERMSG",
      "inputs": [
        "SLATEC",
        "XERMSG",
        "INVALID INPUT",
        1,
        1,
        -1
      ],
      "test_id": 6
    },
    {
      "description": "Valid KONTRL=-1, library=LINPACK, routine=XERROR",
      "inputs": [
        "LINPACK",
        "XERROR",
        "DIVISION BY ZERO",
        2,
        1,
        -1
      ],
      "test_id": 7
    },
    {
      "description": "Valid KONTRL=-1, library=EISPACK, routine=XERCLR",
      "inputs": [
        "EISPACK",
        "XERCLR",
        "OVERFLOW DETECTED",
        3,
        1,
        -1
      ],
      "test_id": 8
    },
    {
      "description": "Valid KONTRL=-1, library=BLAS, routine=XSETF",
      "inputs": [
        "BLAS",
        "XSETF",
        "UNDERFLOW WARNING",
        4,
        1,
        -1
      ],
      "test_id": 9
    },
    {
      "description": "Valid KONTRL=-1, library=LAPACK, routine=XGETF",
      "inputs": [
        "LAPACK",
        "XGETF",
        "CONVERGENCE FAIL",
        5,
        1,
        -1
      ],
      "test_id": 10
    },
    {
      "description": "Valid KONTRL=0, library=SLATEC, routine=XERMSG",
      "inputs": [
        "SLATEC",
        "XERMSG",
        "INVALID INPUT",
        1,
        1,
        0
      ],
      "test_id": 11
    },
    {
      "description": "Valid KONTRL=0, library=LINPACK, routine=XERROR",
      "inputs": [
        "LINPACK",
        "XERROR",
        "DIVISION BY ZERO",
        2,
        1,
        0
      ],
      "test_id": 12
    },
    {
      "description": "Valid KONTRL=0, library=EISPACK, routine=XERCLR",
      "inputs": [
        "EISPACK",
        "XERCLR",
        "OVERFLOW DETECTED",
        3,
        1,
        0
      ],
      "test_id": 13
    },
    {
      "description": "Valid KONTRL=0, library=BLAS, routine=XSETF",
      "inputs": [
        "BLAS",
        "XSETF",
        "UNDERFLOW WARNING",
        4,
        1,
        0
      ],
      "test_id": 14
    },
    {
      "description": "Valid KONTRL=0, library=LAPACK, routine=XGETF",
      "inputs": [
        "LAPACK",
        "XGETF",
        "CONVERGENCE FAIL",
        5,
        1,
        0
      ],
      "test_id": 15
    },
    {
      "description": "Valid KONTRL=1, library=SLATEC, routine=XERMSG",
      "inputs": [
        "SLATEC",
        "XERMSG",
        "INVALID INPUT",
        1,
        1,
        1
      ],
      "test_id": 16
    },
    {
      "description": "Valid KONTRL=1, library=LINPACK, routine=XERROR",
      "inputs": [
        "LINPACK",
        "XERROR",
        "DIVISION BY ZERO",
        2,
        1,
        1
      ],
      "test_id": 17
    },
    {
      "description": "Valid KONTRL=1, library=EISPACK, routine=XERCLR",
      "inputs": [
        "EISPACK",
        "XERCLR",
        "OVERFLOW DETECTED",
        3,
        1,
        1
      ],
      "test_id": 18
    },
    {
      "description": "Valid KONTRL=1, library=BLAS, routine=XSETF",
      "inputs": [
        "BLAS",
        "XSETF",
        "UNDERFLOW WARNING",
        4,
        1,
        1
      ],
      "test_id": 19
    },
    {
      "description": "Valid KONTRL=1, library=LAPACK, routine=XGETF",
      "inputs": [
        "LAPACK",
        "XGETF",
        "CONVERGENCE FAIL",
        5,
        1,
        1
      ],
      "test_id": 20
    },
    {
      "description": "Valid KONTRL=2, library=SLATEC, routine=XERMSG",
      "inputs": [
        "SLATEC",
        "XERMSG",
        "INVALID INPUT",
        1,
        1,
        2
      ],
      "test_id": 21
    },
    {
      "description": "Valid KONTRL=2, library=LINPACK, routine=XERROR",
      "inputs": [
        "LINPACK",
        "XERROR",
        "DIVISION BY ZERO",
        2,
        1,
        2
      ],
      "test_id": 22
    },
    {
      "description": "Valid KONTRL=2, library=EISPACK, routine=XERCLR",
      "inputs": [
        "EISPACK",
        "XERCLR",
        "OVERFLOW DETECTED",
        3,
        1,
        2
      ],
      "test_id": 23
    },
    {
      "description": "Valid KONTRL=2, library=BLAS, routine=XSETF",
      "inputs": [
        "BLAS",
        "XSETF",
        "UNDERFLOW WARNING",
        4,
        1,
        2
      ],
      "test_id": 24
    },
    {
      "description": "Valid KONTRL=2, library=LAPACK, routine=XGETF",
      "inputs": [
        "LAPACK",
        "XGETF",
        "CONVERGENCE FAIL",
        5,
        1,
        2
      ],
      "test_id": 25
    },
    {
      "description": "Invalid KONTRL=-10 (should be clamped to -2 to 2)",
      "inputs": [
        "SLATEC",
        "XERCNT",
        "OUT OF RANGE",
        999,
        2,
        -10
      ],
      "test_id": 26
    },
    {
      "description": "Invalid KONTRL=-5 (should be clamped to -2 to 2)",
      "inputs": [
        "SLATEC",
        "XERCNT",
        "OUT OF RANGE",
        999,
        2,
        -5
      ],
      "test_id": 27
    },
    {
      "description": "Invalid KONTRL=-3 (should be clamped to -2 to 2)",
      "inputs": [
        "SLATEC",
        "XERCNT",
        "OUT OF RANGE",
        999,
        2,
        -3
      ],
      "test_id": 28
    },
    {
      "description": "Invalid KONTRL=3 (should be clamped to -2 to 2)",
      "inputs": [
        "SLATEC",
        "XERCNT",
        "OUT OF RANGE",
        999,
        2,
        3
      ],
      "test_id": 29
    },
    {
      "description": "Invalid KONTRL=5 (should be clamped to -2 to 2)",
      "inputs": [
        "SLATEC",
        "XERCNT",
        "OUT OF RANGE",
        999,
        2,
        5
      ],
      "test_id": 30
    },
    {
      "description": "Invalid KONTRL=10 (should be clamped to -2 to 2)",
      "inputs": [
        "SLATEC",
        "XERCNT",
        "OUT OF RANGE",
        999,
        2,
        10
      ],
      "test_id": 31
    },
    {
      "description": "Invalid KONTRL=100 (should be clamped to -2 to 2)",
      "inputs": [
        "SLATEC",
        "XERCNT",
        "OUT OF RANGE",
        999,
        2,
        100
      ],
      "test_id": 32
    },
    {
      "description": "Invalid KONTRL=-100 (should be clamped to -2 to 2)",
      "inputs": [
        "SLATEC",
        "XERCNT",
        "OUT OF RANGE",
        999,
        2,
        -100
      ],
      "test_id": 33
    },
    {
      "description": "Short library and subroutine names",
      "inputs": [
        "A",
        "B",
        "C",
        1,
        1,
        0
      ],
      "test_id": 34
    },
    {
      "description": "Long library and subroutine names",
      "inputs": [
        "VERYLONGLIBRARYNAMETHATSHOULDBETRUNCATED",
        "VERYLONGSUBROUTINENAMETHATSHOULDBETRUNCATED",
        "VERY LONG ERROR MESSAGE THAT EXCEEDS TWENTY CHARACTERS",
        100,
        2,
        1
      ],
      "test_id": 35
    },
    {
      "description": "Empty strings",
      "inputs": [
        "",
        "",
        "",
        0,
        0,
        0
      ],
      "test_id": 36
    },
    {
      "description": "Strings with embedded spaces",
      "inputs": [
        "MY LIB",
        "MY SUB",
        "ERROR WITH SPACES",
        50,
        1,
        0
      ],
      "test_id": 37
    },
    {
      "description": "Test with NERR=0",
      "inputs": [
        "SLATEC",
        "TEST",
        "ERROR 0",
        0,
        1,
        0
      ],
      "test_id": 38
    },
    {
      "description": "Test with NERR=1",
      "inputs": [
        "SLATEC",
        "TEST",
        "ERROR 1",
        1,
        1,
        0
      ],
      "test_id": 39
    },
    {
      "description": "Test with NERR=-1",
      "inputs": [
        "SLATEC",
        "TEST",
        "ERROR -1",
        -1,
        1,
        0
      ],
      "test_id": 40
    },
    {
      "description": "Test with NERR=100",
      "inputs": [
        "SLATEC",
        "TEST",
        "ERROR 100",
        100,
        1,
        0
      ],
      "test_id": 41
    },
    {
      "description": "Test with NERR=-100",
      "inputs": [
        "SLATEC",
        "TEST",
        "ERROR -100",
        -100,
        1,
        0
      ],
      "test_id": 42
    },
    {
      "description": "Test with NERR=999",
      "inputs": [
        "SLATEC",
        "TEST",
        "ERROR 999",
        999,
        1,
        0
      ],
      "test_id": 43
    },
    {
      "description": "Test with NERR=-999",
      "inputs": [
        "SLATEC",
        "TEST",
        "ERROR -999",
        -999,
        1,
        0
      ],
      "test_id": 44
    },
    {
      "description": "Test with NERR=32767",
      "inputs": [
        "SLATEC",
        "TEST",
        "ERROR 32767",
        32767,
        1,
        0
      ],
      "test_id": 45
    },
    {
      "description": "Test with NERR=-32768",
      "inputs": [
        "SLATEC",
        "TEST",
        "ERROR -32768",
        -32768,
        1,
        0
      ],
      "test_id": 46
    },
    {
      "description": "Test with LEVEL=-2",
      "inputs": [
        "SLATEC",
        "TEST",
        "LEVEL -2",
        1,
        -2,
        0
      ],
      "test_id": 47
    },
    {
      "description": "Test with LEVEL=-1",
      "inputs": [
        "SLATEC",
        "TEST",
        "LEVEL -1",
        1,
        -1,
        0
      ],
      "test_id": 48
    },
    {
      "description": "Test with LEVEL=0",
      "inputs": [
        "SLATEC",
        "TEST",
        "LEVEL 0",
        1,
        0,
        0
      ],
      "test_id": 49
    },
    {
      "description": "Test with LEVEL=1",
      "inputs": [
        "SLATEC",
        "TEST",
        "LEVEL 1",
        1,
        1,
        0
      ],
      "test_id": 50
    },
    {
      "description": "Test with LEVEL=2",
      "inputs": [
        "SLATEC",
        "TEST",
        "LEVEL 2",
        1,
        2,
        0
      ],
      "test_id": 51
    },
    {
      "description": "Test with LEVEL=3",
      "inputs": [
        "SLATEC",
        "TEST",
        "LEVEL 3",
        1,
        3,
        0
      ],
      "test_id": 52
    },
    {
      "description": "Test with LEVEL=10",
      "inputs": [
        "SLATEC",
        "TEST",
        "LEVEL 10",
        1,
        10,
        0
      ],
      "test_id": 53
    },
    {
      "description": "Test with LEVEL=-10",
      "inputs": [
        "SLATEC",
        "TEST",
        "LEVEL -10",
        1,
        -10,
        0
      ],
      "test_id": 54
    },
    {
      "description": "All positive integer parameters",
      "inputs": [
        "POSITIVE",
        "VALUES",
        "ALL POSITIVE",
        100,
        2,
        2
      ],
      "test_id": 55
    },
    {
      "description": "All negative integer parameters",
      "inputs": [
        "NEGATIVE",
        "VALUES",
        "ALL NEGATIVE",
        -100,
        -2,
        -2
      ],
      "test_id": 56
    },
    {
      "description": "Mixed positive/negative parameters",
      "inputs": [
        "MIXED",
        "VALUES",
        "MIXED SIGNS",
        -50,
        1,
        -1
      ],
      "test_id": 57
    },
    {
      "description": "Real error: BESI - OVERFLOW",
      "inputs": [
        "SLATEC",
        "BESI",
        "OVERFLOW",
        1,
        2,
        1
      ],
      "test_id": 58
    },
    {
      "description": "Real error: GAMMA - NEGATIVE ARG",
      "inputs": [
        "SLATEC",
        "GAMMA",
        "NEGATIVE ARG",
        2,
        2,
        0
      ],
      "test_id": 59
    },
    {
      "description": "Real error: SGEFA - SINGULAR MATRIX",
      "inputs": [
        "LINPACK",
        "SGEFA",
        "SINGULAR MATRIX",
        3,
        1,
        -1
      ],
      "test_id": 60
    },
    {
      "description": "Real error: RS - NO CONVERGENCE",
      "inputs": [
        "EISPACK",
        "RS",
        "NO CONVERGENCE",
        4,
        1,
        0
      ],
      "test_id": 61
    },
    {
      "description": "Real error: SAXPY - INVALID N",
      "inputs": [
        "BLAS",
        "SAXPY",
        "INVALID N",
        5,
        2,
        2
      ],
      "test_id": 62
    },
    {
      "description": "Real error: DGESV - INFO ERROR",
      "inputs": [
        "LAPACK",
        "DGESV",
        "INFO ERROR",
        6,
        2,
        1
      ],
      "test_id": 63
    },
    {
      "description": "Real error: PYTHAG - UNDERFLOW",
      "inputs": [
        "SLATEC",
        "PYTHAG",
        "UNDERFLOW",
        7,
        1,
        0
      ],
      "test_id": 64
    },
    {
      "description": "Real error: ENORM - ZERO VECTOR",
      "inputs": [
        "SLATEC",
        "ENORM",
        "ZERO VECTOR",
        8,
        1,
        -1
      ],
      "test_id": 65
    },
    {
      "description": "Stress test combination 1",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        1,
        0,
        -2
      ],
      "test_id": 66
    },
    {
      "description": "Stress test combination 2",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        1,
        0,
        0
      ],
      "test_id": 67
    },
    {
      "description": "Stress test combination 3",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        1,
        0,
        2
      ],
      "test_id": 68
    },
    {
      "description": "Stress test combination 4",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        1,
        1,
        -2
      ],
      "test_id": 69
    },
    {
      "description": "Stress test combination 5",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        1,
        1,
        0
      ],
      "test_id": 70
    },
    {
      "description": "Stress test combination 6",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        1,
        1,
        2
      ],
      "test_id": 71
    },
    {
      "description": "Stress test combination 7",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        1,
        2,
        -2
      ],
      "test_id": 72
    },
    {
      "description": "Stress test combination 8",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        1,
        2,
        0
      ],
      "test_id": 73
    },
    {
      "description": "Stress test combination 9",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        1,
        2,
        2
      ],
      "test_id": 74
    },
    {
      "description": "Stress test combination 10",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        10,
        0,
        -2
      ],
      "test_id": 75
    },
    {
      "description": "Stress test combination 11",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        10,
        0,
        0
      ],
      "test_id": 76
    },
    {
      "description": "Stress test combination 12",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        10,
        0,
        2
      ],
      "test_id": 77
    },
    {
      "description": "Stress test combination 13",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        10,
        1,
        -2
      ],
      "test_id": 78
    },
    {
      "description": "Stress test combination 14",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        10,
        1,
        0
      ],
      "test_id": 79
    },
    {
      "description": "Stress test combination 15",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        10,
        1,
        2
      ],
      "test_id": 80
    },
    {
      "description": "Stress test combination 16",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        10,
        2,
        -2
      ],
      "test_id": 81
    },
    {
      "description": "Stress test combination 17",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        10,
        2,
        0
      ],
      "test_id": 82
    },
    {
      "description": "Stress test combination 18",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        10,
        2,
        2
      ],
      "test_id": 83
    },
    {
      "description": "Stress test combination 19",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        100,
        0,
        -2
      ],
      "test_id": 84
    },
    {
      "description": "Stress test combination 20",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        100,
        0,
        0
      ],
      "test_id": 85
    },
    {
      "description": "Stress test combination 21",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        100,
        0,
        2
      ],
      "test_id": 86
    },
    {
      "description": "Stress test combination 22",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        100,
        1,
        -2
      ],
      "test_id": 87
    },
    {
      "description": "Stress test combination 23",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        100,
        1,
        0
      ],
      "test_id": 88
    },
    {
      "description": "Stress test combination 24",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        100,
        1,
        2
      ],
      "test_id": 89
    },
    {
      "description": "Stress test combination 25",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        100,
        2,
        -2
      ],
      "test_id": 90
    },
    {
      "description": "Stress test combination 26",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        100,
        2,
        0
      ],
      "test_id": 91
    },
    {
      "description": "Stress test combination 27",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG1",
        100,
        2,
        2
      ],
      "test_id": 92
    },
    {
      "description": "Stress test combination 28",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        1,
        0,
        -2
      ],
      "test_id": 93
    },
    {
      "description": "Stress test combination 29",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        1,
        0,
        0
      ],
      "test_id": 94
    },
    {
      "description": "Stress test combination 30",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        1,
        0,
        2
      ],
      "test_id": 95
    },
    {
      "description": "Stress test combination 31",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        1,
        1,
        -2
      ],
      "test_id": 96
    },
    {
      "description": "Stress test combination 32",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        1,
        1,
        0
      ],
      "test_id": 97
    },
    {
      "description": "Stress test combination 33",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        1,
        1,
        2
      ],
      "test_id": 98
    },
    {
      "description": "Stress test combination 34",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        1,
        2,
        -2
      ],
      "test_id": 99
    },
    {
      "description": "Stress test combination 35",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        1,
        2,
        0
      ],
      "test_id": 100
    },
    {
      "description": "Stress test combination 36",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        1,
        2,
        2
      ],
      "test_id": 101
    },
    {
      "description": "Stress test combination 37",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        10,
        0,
        -2
      ],
      "test_id": 102
    },
    {
      "description": "Stress test combination 38",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        10,
        0,
        0
      ],
      "test_id": 103
    },
    {
      "description": "Stress test combination 39",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        10,
        0,
        2
      ],
      "test_id": 104
    },
    {
      "description": "Stress test combination 40",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        10,
        1,
        -2
      ],
      "test_id": 105
    },
    {
      "description": "Stress test combination 41",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        10,
        1,
        0
      ],
      "test_id": 106
    },
    {
      "description": "Stress test combination 42",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        10,
        1,
        2
      ],
      "test_id": 107
    },
    {
      "description": "Stress test combination 43",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        10,
        2,
        -2
      ],
      "test_id": 108
    },
    {
      "description": "Stress test combination 44",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        10,
        2,
        0
      ],
      "test_id": 109
    },
    {
      "description": "Stress test combination 45",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        10,
        2,
        2
      ],
      "test_id": 110
    },
    {
      "description": "Stress test combination 46",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        100,
        0,
        -2
      ],
      "test_id": 111
    },
    {
      "description": "Stress test combination 47",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        100,
        0,
        0
      ],
      "test_id": 112
    },
    {
      "description": "Stress test combination 48",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        100,
        0,
        2
      ],
      "test_id": 113
    },
    {
      "description": "Stress test combination 49",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        100,
        1,
        -2
      ],
      "test_id": 114
    },
    {
      "description": "Stress test combination 50",
      "inputs": [
        "LIB1",
        "SUB1",
        "MSG2",
        100,
        1,
        0
      ],
      "test_id": 115
    },
    {
      "description": "Special characters: SP!CHAR, SUB@123",
      "inputs": [
        "SP!CHAR",
        "SUB@123",
        "ERROR#MSG",
        1,
        1,
        0
      ],
      "test_id": 116
    },
    {
      "description": "Special characters: 123NUM, 456NUM",
      "inputs": [
        "123NUM",
        "456NUM",
        "789 NUMBER",
        2,
        1,
        0
      ],
      "test_id": 117
    },
    {
      "description": "Special characters: UNDER_SCORE, DASH-NAME",
      "inputs": [
        "UNDER_SCORE",
        "DASH-NAME",
        "SLASH/MSG",
        3,
        1,
        0
      ],
      "test_id": 118
    },
    {
      "description": "Special characters: DOT.LIB, COMMA,SUB",
      "inputs": [
        "DOT.LIB",
        "COMMA,SUB",
        "SEMI;COLON",
        4,
        1,
        0
      ],
      "test_id": 119
    },
    {
      "description": "Maximum integer values",
      "inputs": [
        "MAXINT",
        "TEST",
        "MAX VALUES",
        2147483647,
        2147483647,
        2
      ],
      "test_id": 120
    },
    {
      "description": "Minimum integer values",
      "inputs": [
        "MININT",
        "TEST",
        "MIN VALUES",
        -2147483647,
        -2147483647,
        -2
      ],
      "test_id": 121
    },
    {
      "description": "Repeated call #1 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 122
    },
    {
      "description": "Repeated call #2 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 123
    },
    {
      "description": "Repeated call #3 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 124
    },
    {
      "description": "Repeated call #4 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 125
    },
    {
      "description": "Repeated call #5 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 126
    },
    {
      "description": "Repeated call #6 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 127
    },
    {
      "description": "Repeated call #7 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 128
    },
    {
      "description": "Repeated call #8 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 129
    },
    {
      "description": "Repeated call #9 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 130
    },
    {
      "description": "Repeated call #10 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 131
    },
    {
      "description": "Repeated call #11 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 132
    },
    {
      "description": "Repeated call #12 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 133
    },
    {
      "description": "Repeated call #13 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 134
    },
    {
      "description": "Repeated call #14 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 135
    },
    {
      "description": "Repeated call #15 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 136
    },
    {
      "description": "Repeated call #16 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 137
    },
    {
      "description": "Repeated call #17 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 138
    },
    {
      "description": "Repeated call #18 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 139
    },
    {
      "description": "Repeated call #19 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 140
    },
    {
      "description": "Repeated call #20 with same parameters",
      "inputs": [
        "REPEAT",
        "TEST",
        "SAME PARAMS",
        100,
        1,
        0
      ],
      "test_id": 141
    },
    {
      "description": "Sequential KONTRL test: -10",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=-10",
        -10,
        1,
        -10
      ],
      "test_id": 142
    },
    {
      "description": "Sequential KONTRL test: -9",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=-9",
        -9,
        1,
        -9
      ],
      "test_id": 143
    },
    {
      "description": "Sequential KONTRL test: -8",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=-8",
        -8,
        1,
        -8
      ],
      "test_id": 144
    },
    {
      "description": "Sequential KONTRL test: -7",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=-7",
        -7,
        1,
        -7
      ],
      "test_id": 145
    },
    {
      "description": "Sequential KONTRL test: -6",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=-6",
        -6,
        1,
        -6
      ],
      "test_id": 146
    },
    {
      "description": "Sequential KONTRL test: -5",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=-5",
        -5,
        1,
        -5
      ],
      "test_id": 147
    },
    {
      "description": "Sequential KONTRL test: -4",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=-4",
        -4,
        1,
        -4
      ],
      "test_id": 148
    },
    {
      "description": "Sequential KONTRL test: -3",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=-3",
        -3,
        1,
        -3
      ],
      "test_id": 149
    },
    {
      "description": "Sequential KONTRL test: -2",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=-2",
        -2,
        1,
        -2
      ],
      "test_id": 150
    },
    {
      "description": "Sequential KONTRL test: -1",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=-1",
        -1,
        1,
        -1
      ],
      "test_id": 151
    },
    {
      "description": "Sequential KONTRL test: 0",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=0",
        0,
        1,
        0
      ],
      "test_id": 152
    },
    {
      "description": "Sequential KONTRL test: 1",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=1",
        1,
        1,
        1
      ],
      "test_id": 153
    },
    {
      "description": "Sequential KONTRL test: 2",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=2",
        2,
        1,
        2
      ],
      "test_id": 154
    },
    {
      "description": "Sequential KONTRL test: 3",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=3",
        3,
        1,
        3
      ],
      "test_id": 155
    },
    {
      "description": "Sequential KONTRL test: 4",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=4",
        4,
        1,
        4
      ],
      "test_id": 156
    },
    {
      "description": "Sequential KONTRL test: 5",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=5",
        5,
        1,
        5
      ],
      "test_id": 157
    },
    {
      "description": "Sequential KONTRL test: 6",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=6",
        6,
        1,
        6
      ],
      "test_id": 158
    },
    {
      "description": "Sequential KONTRL test: 7",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=7",
        7,
        1,
        7
      ],
      "test_id": 159
    },
    {
      "description": "Sequential KONTRL test: 8",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=8",
        8,
        1,
        8
      ],
      "test_id": 160
    },
    {
      "description": "Sequential KONTRL test: 9",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=9",
        9,
        1,
        9
      ],
      "test_id": 161
    },
    {
      "description": "Sequential KONTRL test: 10",
      "inputs": [
        "SEQUENTIAL",
        "KONTRL",
        "KONTRL=10",
        10,
        1,
        10
      ],
      "test_id": 162
    }
  ]
}