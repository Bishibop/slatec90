# Makefile for Full SLATEC Mega-Validator

FC = gfortran
FFLAGS = -O2 -std=legacy
F90FLAGS = -O2

# Directories
SRC_DIR = ../src
MODERN_DIR = ../modern
PHASE0_DIR = ../modern/phase_0
OBJ_DIR = obj_full

$(shell mkdir -p $(OBJ_DIR))

# Enhanced modules
ENHANCED_MODULES = $(OBJ_DIR)/error_analysis_module.o \
                  $(OBJ_DIR)/performance_module.o \
                  $(OBJ_DIR)/output_formats_module.o \
                  $(OBJ_DIR)/state_validation_module.o \
                  $(OBJ_DIR)/numerical_utils_module.o

# Phase 0 functions for testing - F77 versions (should always exist)
PHASE0_F77_OBJS = $(OBJ_DIR)/pimach_f77.o $(OBJ_DIR)/aaaaaa_f77.o \
                  $(OBJ_DIR)/fdump_f77.o $(OBJ_DIR)/lsame_f77.o \
                  $(OBJ_DIR)/i1mach_f77.o $(OBJ_DIR)/r1mach_f77.o \
                  $(OBJ_DIR)/d1mach_f77.o

# Phase 0 modern versions - build real ones if they exist, stubs otherwise
AVAILABLE_MODERN_SOURCES := $(wildcard $(PHASE0_DIR)/*_module.f90)
PHASE0_MODERN_OBJS := $(patsubst $(PHASE0_DIR)/%_module.f90,$(OBJ_DIR)/%_modern.o,$(AVAILABLE_MODERN_SOURCES))

# Only include stub modules if no real implementations exist
# Since we now have all implementations, skip stubs to avoid conflicts
# STUB_OBJS = $(OBJ_DIR)/stub_modules.o
STUB_OBJS = $(OBJ_DIR)/xermsg_stub.o

# Wrapper objects (commented out for now - not needed)
# WRAPPER_OBJS = $(OBJ_DIR)/pythag_f77_wrapper.o $(OBJ_DIR)/bsplvn_f77_wrapper.o

# Main target
mega_validator_full: $(ENHANCED_MODULES) $(PHASE0_F77_OBJS) $(PHASE0_MODERN_OBJS) $(STUB_OBJS) $(OBJ_DIR)/mega_validator_full.o
	$(FC) -o $@ $^

# Module compilation
$(OBJ_DIR)/%.o: %.f90
	$(FC) $(F90FLAGS) -c $< -o $@

# F77 compilation
$(OBJ_DIR)/%_f77.o: $(SRC_DIR)/%.f
	$(FC) $(FFLAGS) -c $< -o $@

# Wrapper compilation
$(OBJ_DIR)/%_f77_wrapper.o: %_f77_wrapper.f
	$(FC) $(FFLAGS) -c $< -o $@

# Modern compilation - try phase_0 directory first, then modern
$(OBJ_DIR)/%_modern.o: $(PHASE0_DIR)/%_module.f90
	$(FC) $(F90FLAGS) -c $< -o $@

$(OBJ_DIR)/%_modern.o: $(MODERN_DIR)/%_modern.f90
	$(FC) $(F90FLAGS) -c $< -o $@

# Enhanced modules
$(OBJ_DIR)/error_analysis_module.o: error_analysis_module.f90
	$(FC) $(F90FLAGS) -c $< -o $@

$(OBJ_DIR)/performance_module.o: performance_module.f90
	$(FC) $(F90FLAGS) -c $< -o $@

$(OBJ_DIR)/output_formats_module.o: output_formats_module.f90 $(OBJ_DIR)/error_analysis_module.o
	$(FC) $(F90FLAGS) -c $< -o $@

$(OBJ_DIR)/state_validation_module.o: state_validation_module.f90
	$(FC) $(F90FLAGS) -c $< -o $@

$(OBJ_DIR)/numerical_utils_module.o: numerical_utils_module.f90
	$(FC) $(F90FLAGS) -c $< -o $@

# Stub modules
$(OBJ_DIR)/stub_modules.o: stub_modules.f90
	$(FC) $(F90FLAGS) -c $< -o $@

$(OBJ_DIR)/xermsg_stub.o: xermsg_stub.f
	$(FC) $(FFLAGS) -c $< -o $@

# Main program
$(OBJ_DIR)/mega_validator_full.o: mega_validator_full.f90 $(ENHANCED_MODULES) $(PHASE0_MODERN_OBJS)
	$(FC) $(F90FLAGS) -c $< -o $@

clean:
	rm -rf $(OBJ_DIR) mega_validator_full

test: mega_validator_full
	./mega_validator_full < test_cases.txt

test-focused: mega_validator_full
	./mega_validator_full < focused_tests.txt

test-comprehensive: mega_validator_full
	./mega_validator_full < comprehensive_tests.txt

list: mega_validator_full
	./mega_validator_full --list

.PHONY: clean test test-focused test-comprehensive list