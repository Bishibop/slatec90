# Makefile for Full SLATEC Mega-Validator

FC = gfortran
FFLAGS = -O2 -std=legacy
F90FLAGS = -O2

# Directories
SRC_DIR = ../src
MODERN_DIR = ../modern
PHASE0_DIR = ../modern/phase_0
OBJ_DIR = obj_full

$(shell mkdir -p $(OBJ_DIR))

# Enhanced modules
ENHANCED_MODULES = $(OBJ_DIR)/error_analysis_module.o \
                  $(OBJ_DIR)/performance_module.o \
                  $(OBJ_DIR)/output_formats_module.o \
                  $(OBJ_DIR)/state_validation_module.o \
                  $(OBJ_DIR)/numerical_utils_module.o \
                  $(OBJ_DIR)/runtime_detection_module.o

# Include auto-generated function list
include functions.mk

# Build a list of F77 sources for tested functions only
TESTED_F77_SRCS := $(foreach func,$(ALL_TESTED_FUNCTIONS),$(wildcard $(SRC_DIR)/$(func).f))
ALL_F77_OBJS := $(patsubst $(SRC_DIR)/%.f,$(OBJ_DIR)/%_f77.o,$(TESTED_F77_SRCS))

# Modern versions - build all available modern modules
AVAILABLE_MODERN_SOURCES := $(wildcard $(MODERN_DIR)/*_module.f90)
MODERN_OBJS := $(patsubst $(MODERN_DIR)/%_module.f90,$(OBJ_DIR)/%_modern.o,$(AVAILABLE_MODERN_SOURCES))

# Only include stub modules if no real implementations exist
# Since we now have all implementations, skip stubs to avoid conflicts
# STUB_OBJS = $(OBJ_DIR)/stub_modules.o
# STUB_OBJS = $(OBJ_DIR)/xermsg_stub.o
STUB_OBJS =

# Wrapper objects (commented out for now - not needed)
# WRAPPER_OBJS = $(OBJ_DIR)/pythag_f77_wrapper.o $(OBJ_DIR)/bsplvn_f77_wrapper.o

# Main target - generate function lists first
mega_validator_full: functions.mk $(ENHANCED_MODULES) $(ALL_F77_OBJS) $(MODERN_OBJS) $(STUB_OBJS) $(OBJ_DIR)/mega_validator_full.o
	$(FC) -o $@ $(filter-out functions.mk,$^)

# Auto-generate function lists
functions.mk: discover_functions.py
	python discover_functions.py

# Module compilation
$(OBJ_DIR)/%.o: %.f90
	$(FC) $(F90FLAGS) -c $< -o $@

# F77 compilation
$(OBJ_DIR)/%_f77.o: $(SRC_DIR)/%.f
	$(FC) $(FFLAGS) -c $< -o $@

# Wrapper compilation
$(OBJ_DIR)/%_f77_wrapper.o: %_f77_wrapper.f
	$(FC) $(FFLAGS) -c $< -o $@

# Modern compilation from modules
$(OBJ_DIR)/%_modern.o: $(MODERN_DIR)/%_module.f90
	$(FC) $(F90FLAGS) -c $< -o $@

# Enhanced modules
$(OBJ_DIR)/error_analysis_module.o: error_analysis_module.f90
	$(FC) $(F90FLAGS) -c $< -o $@

$(OBJ_DIR)/performance_module.o: performance_module.f90
	$(FC) $(F90FLAGS) -c $< -o $@

$(OBJ_DIR)/output_formats_module.o: output_formats_module.f90 $(OBJ_DIR)/error_analysis_module.o
	$(FC) $(F90FLAGS) -c $< -o $@

$(OBJ_DIR)/state_validation_module.o: state_validation_module.f90
	$(FC) $(F90FLAGS) -c $< -o $@

$(OBJ_DIR)/numerical_utils_module.o: numerical_utils_module.f90
	$(FC) $(F90FLAGS) -c $< -o $@

$(OBJ_DIR)/runtime_detection_module.o: runtime_detection_module.f90
	$(FC) $(F90FLAGS) -c $< -o $@

# Stub modules
$(OBJ_DIR)/stub_modules.o: stub_modules.f90
	$(FC) $(F90FLAGS) -c $< -o $@

$(OBJ_DIR)/xermsg_stub.o: xermsg_stub.f
	$(FC) $(FFLAGS) -c $< -o $@

# Main program - depends on generated includes
$(OBJ_DIR)/mega_validator_full.o: mega_validator_full.f90 $(ENHANCED_MODULES) $(MODERN_OBJS) functions.inc functions_routines.inc validation_includes.inc
	$(FC) $(F90FLAGS) -c $< -o $@

# Generated include files
functions.inc functions_routines.inc validation_includes.inc: functions.mk
	# Already generated by functions.mk rule

clean:
	rm -rf $(OBJ_DIR) mega_validator_full functions.mk functions.inc functions_routines.inc validation_includes.inc

test: mega_validator_full
	./mega_validator_full < test_cases.txt

test-focused: mega_validator_full
	./mega_validator_full < focused_tests.txt

test-comprehensive: mega_validator_full
	./mega_validator_full < comprehensive_tests.txt

list: mega_validator_full
	./mega_validator_full --list

.PHONY: clean test test-focused test-comprehensive list